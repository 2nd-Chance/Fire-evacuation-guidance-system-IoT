#******************************************************************
#
# Copyright 2017 Intel Mobile Communications GmbH All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
##
# Bridging build script
##

import os.path

Import('env')

target_os = env.get('TARGET_OS')
build_sample = 'ON'
src_dir = env.get('SRC_DIR')

# rapidjson fetch
SConscript(os.path.join(env.get('SRC_DIR'), 'extlibs', 'rapidjson', 'SConscript'))

if target_os not in [
    'android', 'arduino', 'darwin', 'ios', 'tizen', 'msys_nt', 'windows']:

    SConscript(os.path.join('common', 'SConscript'))

    SConscript(os.path.join('mini_plugin_manager', 'SConscript'))

    SConscript(os.path.join('mpm_client', 'SConscript'))

    SConscript(os.path.join('plugins', 'lifx_plugin', 'SConscript'))

    SConscript(os.path.join('plugins', 'hue_plugin', 'SConscript'))

    SConscript(os.path.join('plugins', 'nest_plugin', 'SConscript'))

    SConscript(os.path.join('plugins', 'lyric_plugin', 'SConscript'))
